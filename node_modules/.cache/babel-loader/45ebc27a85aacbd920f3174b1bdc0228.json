{"remainingRequest":"/home/aijan/repos/game/node_modules/babel-loader/lib/index.js!/home/aijan/repos/game/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/aijan/repos/game/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aijan/repos/game/src/components/Grid.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/aijan/repos/game/src/components/Grid.vue","mtime":1552487941300},{"path":"/home/aijan/repos/game/node_modules/cache-loader/dist/cjs.js","mtime":1549999330655},{"path":"/home/aijan/repos/game/node_modules/babel-loader/lib/index.js","mtime":1547925081538},{"path":"/home/aijan/repos/game/node_modules/cache-loader/dist/cjs.js","mtime":1549999330655},{"path":"/home/aijan/repos/game/node_modules/vue-loader/lib/index.js","mtime":1551892036365}],"contextDependencies":[],"result":["import _Object$assign from \"/home/aijan/repos/game/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Cell from './Cell.vue';\nexport default {\n  components: 'Cell',\n  data: function data() {\n    return {\n      activePlayer: 'O',\n      gameStatus: 'turn',\n      gameStatusMessage: \"O's turn\",\n      gameStatusColor: 'statusTurn',\n      moves: 0,\n      cells: {\n        1: '',\n        2: '',\n        3: '',\n        4: '',\n        5: '',\n        6: '',\n        7: '',\n        8: '',\n        9: ''\n      },\n      winConditions: [[1, 2, 3], [4, 5, 6], [7, 8, 9], [1, 4, 7], [2, 5, 8], [3, 6, 9], [1, 5, 9], [3, 5, 7]]\n    };\n  },\n  computed: {\n    nonActivePlayer: function nonActivePlayer() {\n      if (this.activePlayer === 'O') {\n        return 'X';\n      }\n\n      return 'O';\n    }\n  },\n  watch: {\n    gameStatus: function gameStatus() {\n      if (this.gameStatus === 'win') {\n        this.gameStatusColor = 'statusWin';\n        return;\n      } else if (this.gameStatus === 'draw') {\n        this.gameStatusColor = 'statusDraw';\n        this.gameStatusMessage = 'Draw !';\n        return;\n      }\n\n      this.gameStatusMessage = \"\".concat(this.activePlayer, \"'s turn\");\n    }\n  },\n  methods: {\n    changePlayer: function changePlayer() {\n      this.activePlayer = this.nonActivePlayer;\n    },\n    checkForWin: function checkForWin() {\n      for (var i = 0; i < this.winConditions.length; i++) {\n        var wc = this.winConditions[i];\n        var cells = this.cells;\n\n        if (this.areEqual(cells[wc[0]], cells[wc[1]], cells[wc[2]])) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    gameIsWon: function gameIsWon() {\n      Event.$emit('win', this.activePlayer);\n      this.gameStatusMessage = \"\".concat(this.activePlayer, \" Wins !\");\n      Event.$emit('freeze');\n      return 'win';\n    },\n    changeGameStatus: function changeGameStatus() {\n      if (this.checkForWin()) {\n        return this.gameIsWon();\n      } else if (this.moves === 9) {\n        return 'draw';\n      }\n\n      return 'turn';\n    },\n    areEqual: function areEqual() {\n      var len = arguments.length;\n\n      for (var i = 1; i < len; i++) {\n        if (arguments[i] === '' || arguments[i] !== arguments[i - 1]) return false;\n      }\n\n      return true;\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    Event.$on('strike', function (cellNumber) {\n      _this.cells[cellNumber] = _this.activePlayer;\n      _this.moves++;\n      _this.gameStatus = _this.changeGameStatus();\n\n      _this.changePlayer();\n    });\n    Event.$on('gridReset', function () {\n      _Object$assign(_this.$data, _this.$options.data());\n    });\n  }\n};",{"version":3,"sources":["Grid.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<div>\n\t\t<div class=\"gameStatus\" :class=\"gameStatusColor\">\n\t\t\t{{ gameStatusMessage }}\n\t\t</div>\n\t\t<table class=\"grid\">\n\t\t  <tr>\n\t\t    <cell name=\"1\"></cell>\n\t\t    <cell name=\"2\"></cell>\n\t\t    <cell name=\"3\"></cell>\n\t\t  </tr>\n\t\t  <tr>\n\t\t    <cell name=\"4\"></cell>\n\t\t    <cell name=\"5\"></cell>\n\t\t    <cell name=\"6\"></cell>\n\t\t  </tr>\n\t\t  <tr>\n\t\t    <cell name=\"7\"></cell>\n\t\t    <cell name=\"8\"></cell>\n\t\t    <cell name=\"9\"></cell>\n\t\t  </tr>\n\t\t</table>\n\t</div>\n</template>\n\n<script>\nimport Cell from './Cell.vue'\n\nexport default {\n\tcomponents: 'Cell',\n  data () {\n    return {    \t\n    \tactivePlayer: 'O',    \n    \tgameStatus: 'turn',\n    \tgameStatusMessage: `O's turn`,\n     \tgameStatusColor: 'statusTurn',\n    \t  \tmoves: 0,    \n\t\t\tcells: {\n\t\t\t\t1: '', 2: '', 3: '',\n\t\t\t\t4: '', 5: '', 6: '',\n\t\t\t\t7: '', 8: '', 9: ''\n\t\t\t},\n\t\t\twinConditions: [\n\t\t\t\t[1, 2, 3], [4, 5, 6], [7, 8, 9], \n\t\t\t\t[1, 4, 7], [2, 5, 8],\t[3, 6, 9], \n\t\t\t\t[1, 5, 9], [3, 5, 7]             \n\t\t\t],\n    }\n  },\n  computed: {  \t\n  \tnonActivePlayer () {\n  \t\tif (this.activePlayer === 'O') {\n  \t\t\treturn 'X'\n  \t\t}\n  \t\treturn 'O'\n  \t}\n  },\n  watch: {  \n  \tgameStatus () {\n  \t\tif (this.gameStatus === 'win') {\n  \t\t\tthis.gameStatusColor = 'statusWin'\n\n  \t\t\treturn\n  \t\t} else if (this.gameStatus === 'draw') {\n  \t\t\tthis.gameStatusColor = 'statusDraw'\n\n  \t\t\tthis.gameStatusMessage = 'Draw !'  \t\t\t\n  \t\t\treturn\n  \t\t}\n\t\t\tthis.gameStatusMessage = `${this.activePlayer}'s turn`\n  \t}\n  },\n  methods: {\n   \tchangePlayer () {\n\t\t\tthis.activePlayer = this.nonActivePlayer\n\t\t},\n\t\tcheckForWin () {\n\t\t\tfor (let i = 0; i < this.winConditions.length; i++) {\n\t\t\t\tlet wc = this.winConditions[i]\n\t\t\t\tlet cells = this.cells\n     \t\tif (this.areEqual(cells[wc[0]], cells[wc[1]], cells[wc[2]])) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false\n\t\t},\n\t\tgameIsWon () {\t\t\t\n\t\t\tEvent.$emit('win', this.activePlayer)\n\t\t\t\n\t\t\tthis.gameStatusMessage = `${this.activePlayer} Wins !`\n\t\t\t\n\t\t\tEvent.$emit('freeze')\n\t\t\t\n\t\t\treturn 'win'\n\t\t},\t\t\n\t\tchangeGameStatus () {\n\t\t\tif (this.checkForWin()) {\n\t\t\t\treturn this.gameIsWon()\n\t\t\t} else if (this.moves === 9) {\n\t\t\t\treturn 'draw'\n\t\t\t}\n\t\t\t    return 'turn'\n\t\t},\t\t\n\t\tareEqual () {\n\t\t  var len = arguments.length;\t \n\t\t  for (var i = 1; i < len; i++){\n\t\t    if (arguments[i] === '' || arguments[i] !== arguments[i-1])\n\t\t      return false;\n\t\t   }\n\t\t   return true;\n\t\t}\n  },\n  created () {  \t\n  \tEvent.$on('strike', (cellNumber) => {\n\t\t\tthis.cells[cellNumber] = this.activePlayer\t\t\t\n\t\t\tthis.moves++\t\n\t\t\tthis.gameStatus = this.changeGameStatus()\n\t\t\tthis.changePlayer()\n  \t})\t\t\n  \tEvent.$on('gridReset', () => {\n  \t\tObject.assign(this.$data, this.$options.data())\n  \t})\n  }\n}\n</script>\n\n<style>\n.grid {\n  background-color: #34495e;\n  color: #fff;\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.gameStatus {\n  margin: 0px;\n  padding: 15px;\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n  background-color: #f1c40f;\n  color: #fff;\t\n  font-size: 1.4em;\n  font-weight: bold;\n}\n\n.statusTurn {\n\tbackground-color: #f1c40f;\n}\n\n.statusWin {\n\tbackground-color: #2ecc71;\n}\n\n.statusDraw {\n\tbackground-color: #9b59b6;\n}\n</style>\n"],"sourceRoot":"src/components"}]}