{"remainingRequest":"/home/aijan/repos/game/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aijan/repos/game/src/views/Krita.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/aijan/repos/game/src/views/Krita.vue","mtime":1552396793195},{"path":"/home/aijan/repos/game/node_modules/cache-loader/dist/cjs.js","mtime":1549999330655},{"path":"/home/aijan/repos/game/node_modules/babel-loader/lib/index.js","mtime":1547925081538},{"path":"/home/aijan/repos/game/node_modules/cache-loader/dist/cjs.js","mtime":1549999330655},{"path":"/home/aijan/repos/game/node_modules/vue-loader/lib/index.js","mtime":1551892036365}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import Grid from '@/components/Grid.vue'\nexport default {\n  components: { Grid }, \n  data () {\n    return {\n      matches: 0,\n      wins: {\n        O: 0,\n        X: 0\n      }\n    }\n  },\n\n  methods: {\n    restart () {\n      Event.$emit('clearCell')\n\n      Event.$emit('gridReset')\n\n      this.matches++\n    }\n  },\n\n  created () {\n    Event.$on('win', winner => this.wins[winner]++)\n  }\n}\n",{"version":3,"sources":["Krita.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Krita.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"krita\">\n     <div class=\"scoreBoard\">\n      <span>O has {{ wins.O }} wins</span>\n      <h2>Score Board</h2>\n      <span>X has {{ wins.X }} wins</span>\n    </div>    \n      <div id=\"details\">\n        <h1>Tic Tac Toe</h1>\n        <h2>Match #{{ matches + 1 }}</h2>\n      </div>\n      <grid></grid>\n      <button class=\"restart\" @click=\"restart\">Restart</button>\n  </div>\n</template>\n\n<script>\n  import Grid from '@/components/Grid.vue'\nexport default {\n  components: { Grid }, \n  data () {\n    return {\n      matches: 0,\n      wins: {\n        O: 0,\n        X: 0\n      }\n    }\n  },\n\n  methods: {\n    restart () {\n      Event.$emit('clearCell')\n\n      Event.$emit('gridReset')\n\n      this.matches++\n    }\n  },\n\n  created () {\n    Event.$on('win', winner => this.wins[winner]++)\n  }\n}\n</script>\n\n<style>\n.krita {\n  margin: 0 auto; \n  max-width: 270px;\n  color: #34495e;\n}\n\nh1 {\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 2em;\n}\n\n.restart {\n  background-color: #e74c3c;\n  color: #fff;\n  border: 0px;\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n  font-family: 'Dosis', Helvetica, sans-serif;\n  font-size: 1.4em;\n  font-weight: bold;\n  margin: 0px;\n  padding: 15px;\n  width: 100%;\n}\n\n.restart:hover {\n  background-color: #c0392b;\n  cursor: pointer;\n}\n\n.scoreBoard {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  height: 15px;\n  background-color: #16a085;\n  box-shadow: 10px solid #fff;\n  padding: 20px;\n  overflow-x: none;\n}\n\n.scoreBoard h2 {\n  margin: 0px;\n}\n\n.scoreBoard span {\n  float: right;\n  font-size: 1.5em;\n  font-weight: bold;\n  margin-left: 20px;\n}\n</style>\n\n"]}]}