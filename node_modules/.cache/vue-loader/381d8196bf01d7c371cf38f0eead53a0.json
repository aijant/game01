{"remainingRequest":"/home/aijan/repos/game/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aijan/repos/game/src/components/Grid.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/aijan/repos/game/src/components/Grid.vue","mtime":1552487941300},{"path":"/home/aijan/repos/game/node_modules/css-loader/index.js","mtime":1547925087038},{"path":"/home/aijan/repos/game/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1551892036365},{"path":"/home/aijan/repos/game/node_modules/postcss-loader/src/index.js","mtime":1547925087290},{"path":"/home/aijan/repos/game/node_modules/cache-loader/dist/cjs.js","mtime":1549999330655},{"path":"/home/aijan/repos/game/node_modules/vue-loader/lib/index.js","mtime":1551892036365}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.grid {\n  background-color: #34495e;\n  color: #fff;\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.gameStatus {\n  margin: 0px;\n  padding: 15px;\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n  background-color: #f1c40f;\n  color: #fff;\t\n  font-size: 1.4em;\n  font-weight: bold;\n}\n\n.statusTurn {\n\tbackground-color: #f1c40f;\n}\n\n.statusWin {\n\tbackground-color: #2ecc71;\n}\n\n.statusDraw {\n\tbackground-color: #9b59b6;\n}\n",{"version":3,"sources":["Grid.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Grid.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<div>\n\t\t<div class=\"gameStatus\" :class=\"gameStatusColor\">\n\t\t\t{{ gameStatusMessage }}\n\t\t</div>\n\t\t<table class=\"grid\">\n\t\t  <tr>\n\t\t    <cell name=\"1\"></cell>\n\t\t    <cell name=\"2\"></cell>\n\t\t    <cell name=\"3\"></cell>\n\t\t  </tr>\n\t\t  <tr>\n\t\t    <cell name=\"4\"></cell>\n\t\t    <cell name=\"5\"></cell>\n\t\t    <cell name=\"6\"></cell>\n\t\t  </tr>\n\t\t  <tr>\n\t\t    <cell name=\"7\"></cell>\n\t\t    <cell name=\"8\"></cell>\n\t\t    <cell name=\"9\"></cell>\n\t\t  </tr>\n\t\t</table>\n\t</div>\n</template>\n\n<script>\nimport Cell from './Cell.vue'\n\nexport default {\n\tcomponents: 'Cell',\n  data () {\n    return {    \t\n    \tactivePlayer: 'O',    \n    \tgameStatus: 'turn',\n    \tgameStatusMessage: `O's turn`,\n     \tgameStatusColor: 'statusTurn',\n    \t  \tmoves: 0,    \n\t\t\tcells: {\n\t\t\t\t1: '', 2: '', 3: '',\n\t\t\t\t4: '', 5: '', 6: '',\n\t\t\t\t7: '', 8: '', 9: ''\n\t\t\t},\n\t\t\twinConditions: [\n\t\t\t\t[1, 2, 3], [4, 5, 6], [7, 8, 9], \n\t\t\t\t[1, 4, 7], [2, 5, 8],\t[3, 6, 9], \n\t\t\t\t[1, 5, 9], [3, 5, 7]             \n\t\t\t],\n    }\n  },\n  computed: {  \t\n  \tnonActivePlayer () {\n  \t\tif (this.activePlayer === 'O') {\n  \t\t\treturn 'X'\n  \t\t}\n  \t\treturn 'O'\n  \t}\n  },\n  watch: {  \n  \tgameStatus () {\n  \t\tif (this.gameStatus === 'win') {\n  \t\t\tthis.gameStatusColor = 'statusWin'\n\n  \t\t\treturn\n  \t\t} else if (this.gameStatus === 'draw') {\n  \t\t\tthis.gameStatusColor = 'statusDraw'\n\n  \t\t\tthis.gameStatusMessage = 'Draw !'  \t\t\t\n  \t\t\treturn\n  \t\t}\n\t\t\tthis.gameStatusMessage = `${this.activePlayer}'s turn`\n  \t}\n  },\n  methods: {\n   \tchangePlayer () {\n\t\t\tthis.activePlayer = this.nonActivePlayer\n\t\t},\n\t\tcheckForWin () {\n\t\t\tfor (let i = 0; i < this.winConditions.length; i++) {\n\t\t\t\tlet wc = this.winConditions[i]\n\t\t\t\tlet cells = this.cells\n     \t\tif (this.areEqual(cells[wc[0]], cells[wc[1]], cells[wc[2]])) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false\n\t\t},\n\t\tgameIsWon () {\t\t\t\n\t\t\tEvent.$emit('win', this.activePlayer)\n\t\t\t\n\t\t\tthis.gameStatusMessage = `${this.activePlayer} Wins !`\n\t\t\t\n\t\t\tEvent.$emit('freeze')\n\t\t\t\n\t\t\treturn 'win'\n\t\t},\t\t\n\t\tchangeGameStatus () {\n\t\t\tif (this.checkForWin()) {\n\t\t\t\treturn this.gameIsWon()\n\t\t\t} else if (this.moves === 9) {\n\t\t\t\treturn 'draw'\n\t\t\t}\n\t\t\t    return 'turn'\n\t\t},\t\t\n\t\tareEqual () {\n\t\t  var len = arguments.length;\t \n\t\t  for (var i = 1; i < len; i++){\n\t\t    if (arguments[i] === '' || arguments[i] !== arguments[i-1])\n\t\t      return false;\n\t\t   }\n\t\t   return true;\n\t\t}\n  },\n  created () {  \t\n  \tEvent.$on('strike', (cellNumber) => {\n\t\t\tthis.cells[cellNumber] = this.activePlayer\t\t\t\n\t\t\tthis.moves++\t\n\t\t\tthis.gameStatus = this.changeGameStatus()\n\t\t\tthis.changePlayer()\n  \t})\t\t\n  \tEvent.$on('gridReset', () => {\n  \t\tObject.assign(this.$data, this.$options.data())\n  \t})\n  }\n}\n</script>\n\n<style>\n.grid {\n  background-color: #34495e;\n  color: #fff;\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.gameStatus {\n  margin: 0px;\n  padding: 15px;\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n  background-color: #f1c40f;\n  color: #fff;\t\n  font-size: 1.4em;\n  font-weight: bold;\n}\n\n.statusTurn {\n\tbackground-color: #f1c40f;\n}\n\n.statusWin {\n\tbackground-color: #2ecc71;\n}\n\n.statusDraw {\n\tbackground-color: #9b59b6;\n}\n</style>\n"]}]}